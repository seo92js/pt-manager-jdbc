drop table if exists admin CASCADE;
drop table if exists member CASCADE;
drop table if exists trainer CASCADE;
drop table if exists ticket CASCADE;
drop table if exists message CASCADE;
drop table if exists memberticket CASCADE;
drop table if exists reserve CASCADE;

create table admin
(
    id bigint generated by default as identity,
    login_id varchar(15),
    name varchar(10),
    password varchar(10),
    primary key (id)
);

create table member
(
    id bigint generated by default as identity,
    login_id varchar(15),
    name varchar(10),
    password varchar(10),
    primary key (id)
);

create table trainer
(
    id bigint generated by default as identity,
    login_id varchar(15),
    name varchar(10),
    password varchar(10),
    start_time time,
    end_time time,
    primary key (id)
);

create table ticket
(
    id bigint generated by default as identity,
    total_num integer,
    remain_num integer,
    price integer,
    status boolean,
    primary key (id)
);

create table message
(
    id bigint generated by default as identity,
    content varchar(255),
    is_read boolean,
    send_member_id bigint,
    receive_trainer_id bigint,
    send_trainer_id bigint,
    receive_member_id bigint,
    primary key (id),
    foreign key (send_member_id) references member(id),
    foreign key (receive_trainer_id) references trainer(id),
    foreign key (send_trainer_id) references trainer(id),
    foreign key (receive_member_id) references member(id),
    created_date datetime
);

create table memberticket
(
    id bigint generated by default as identity,
    member_id bigint,
    ticket_id bigint,
    primary key (id),
    foreign key (member_id) references member(id),
    foreign key (ticket_id) references ticket(id)
);

create table reserve
(
    id bigint generated by default as identity,
    member_id bigint,
    trainer_id bigint,
    ticket_id bigint,
    reserve_time datetime,
    primary key (id),
    foreign key (member_id) references member(id),
    foreign key (trainer_id) references trainer(id),
    foreign key (ticket_id) references ticket(id)
);

insert into admin (login_id, name, password) values ('admin', 'admin', '1234');
